---
import jsonLDGenerator from "./JSONLDData";

export interface Props {
  description?: string;
  tags?: string[];
  title?: string;
  image?: string;
  canonicalUrl?: string;
  isBlog?: boolean;
  date?: string;
}

const {
  description = "This is Aadil Mallick's blog. Come here for coding, life, and more. Or don't. Whatever.",
  tags = [],
  title = "Aadil Mallick Blog",
  image = "https://static.wixstatic.com/media/303e7f_376aa81f7047471197e6f5018fc52d0b~mv2.jpg/v1/fill/w_300,h_300,al_c,q_80,usm_0.66_1.00_0.01,enc_auto/20230509_150357%20-%20Aadil%20Mallick.jpg",
  canonicalUrl = "https://aadilmallickblog.tech",
  isBlog = true,
  date = new Date().toISOString(),
}: Props = Astro.props;

const scriptText = jsonLDGenerator({
  date,
  description,
  image,
  title,
  url: canonicalUrl,
  type: isBlog ? "post" : "website",
});
---

<Fragment set:html={scriptText} />

<meta name="description" content={`${String(description).slice(0, 150)}...`} />
<meta name="author" content="Aadil Mallick" />
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
<link rel="shortcut icon" href="/favicon.ico" type="image/ico" />
<link rel="manifest" href="/site.webmanifest" />
<link rel="canonical" href={`${canonicalUrl}/`} />

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-WS5J6CHBMD"
></script>
<script
  async
  src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9636050596453325"
  crossorigin="anonymous"
></script>
<script async>
  window.dataLayer = window.dataLayer || [];
  function gtag() {
    dataLayer.push(arguments);
  }
  gtag("js", new Date());

  gtag("config", "G-WS5J6CHBMD");
</script>

<meta property="og:title" content={`${title}`} />
<meta property="og:type" content="website" />
<!-- TODO: do something here, fix url -->
<meta property="og:url" content="https://aadilmallickblog.tech" />
<meta property="og:image" content={`${image}`} />
<meta
  property="og:description"
  content={`${String(description).slice(0, 150)}...`}
/>
<meta property="og:site_name" content="Aadil Mallick Blog" />
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:image" content={`${image}`} />

<!-- <script>
  function createBlogStructuredData() {
    const schema = {
      "@context": "http://schema.org",
      "@type": "BlogPosting",
      name: ar,
      headline: articleName,
      image: image,
      author: {
        "@type": "Person",
        name: "Aadil Mallick",
        url: "https://aadilmallick.com/about",
      },
      date: date,
    };

    const script = document.createElement("script");
    script.textContent = JSON.stringify(schema);
    script.type = "application/ld+json";
    document.head.appendChild(script);

    console.log("did it!");
  }

  createBlogStructuredData();
</script> -->

<!-- TODO: #1 create a typescript script that creates a json ld script by creating custom web component -->
<!-- TODO: #2 In custom web component, create shadow DOM and create script element-->
<!-- TODO: #3 In custom web component, accept dataset props and create schema -->
<!-- TODO: #4 In custom web component, populate script text content with JSON stringified schema -->
<!-- TODO: #5 Append Script to Head -->
